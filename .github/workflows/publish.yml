name: Publish VS Code Extension

on:
  workflow_dispatch: {}

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies (no install scripts)
        run: npm ci --ignore-scripts

      - name: Build (tsc)
        run: npm run compile

      - name: Package
        run: npx vsce package

      - name: Read package version
        id: pkg
        run: echo "version=$(node -p \"require('./package.json').version\")" >> $GITHUB_OUTPUT


      - name: Check if version already published
        id: published
        run: |
          set -e
          OUT=$(npx vsce show jsnjjnzx.docusnap-assets --json || echo '{}')
          printf "%s" "$OUT" > meta.json
          node -e "const fs=require('fs');const d=JSON.parse(fs.readFileSync('meta.json','utf8')||'{}');const v='${{ steps.pkg.outputs.version }}';const exists=(d.versions||[]).some(x=>x.version===v);fs.appendFileSync(process.env.GITHUB_OUTPUT, `exists=${exists}\n`);"

      - name: Upload .vsix artifact
        uses: actions/upload-artifact@v4
        with:
          name: docusnap-assets-vsix
          path: "*.vsix"

      - name: Publish to VS Code Marketplace
        if: ${{ secrets.VSCE_TOKEN && steps.published.outputs.exists != 'true' }}
        env:
          VSCE_TOKEN: ${{ secrets.VSCE_TOKEN }}
        run: npx vsce publish -p "$VSCE_TOKEN"

      - name: Skip publish (already exists or no token)
        if: ${{ !secrets.VSCE_TOKEN || steps.published.outputs.exists == 'true' }}
        run: |
          echo "Skip publishing. Reason: ${{ !secrets.VSCE_TOKEN && 'missing VSCE_TOKEN secret' || 'version already exists' }}"
